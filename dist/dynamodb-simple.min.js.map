{"version":3,"file":"dynamodb-simple.min.js","sources":["../lib/db.js","../lib/utils.js","../lib/parser.js","../lib/documentClient.js","../lib/lexer.js","../lib/index.js"],"sourcesContent":["const AWS = require('aws-sdk');\nlet db = undefined;\n\nexport function setup(accessKey, secret, region, endpoint) {\n  AWS.config.update({\n    accessKeyId: accessKey,\n    secretAccessKey: secret,\n    region: region\n  });\n  db = new AWS.DynamoDB.DocumentClient({ endpoint: endpoint });\n}\n\nexport function get() {\n  return db;\n}\n","export function formatType(type, value) {\n  switch(type) {\n    case 'NUMBER':\n      return parseFloat(value);\n    case 'BOOLEAN':\n      if (value === 'null') return null;\n      if (value === 'true') return true;\n      if (value === 'false') return false;\n    default:\n      return value;\n  }\n}\n\nexport function formatAttrAlias(attr) {\n  return attr.replace(/-/g, '').replace(/\\./g, '').replace(/@/g, '')\n}\n\nexport function fixCallback(callback) {\n  if (typeof callback !== 'function') callback = noop;\n  return callback;\n}\n\nexport function noop() {}\n","import lexer from './lexer';\nimport { formatType, formatAttrAlias } from './utils';\nconst reserved = ['SET', 'AND', 'OR', 'ADD'];\n\nexport default function parseQuery(query, hash, range, useKeyCondition) {\n  let KeyConditionExpression = '';\n  let attributes = {};\n  let values = {};\n  query = lexer.tokenize(query).reduce((a, b) => {\n    if (b[0] === 'LITERAL' && !reserved.includes(b[1])) {\n      if (useKeyCondition && hash && b[1] === hash) {\n        KeyConditionExpression += ` #${b[1]}`;\n      } else if (useKeyCondition && range && b[1] === range) {\n        KeyConditionExpression += `, #${b[1]}`;\n      } else {\n        a += ` #${b[1]}`;\n      }\n      attributes[`#${b[1]}`] = b[1];\n    } else if (b[0] === 'NUMBER' || b[0] === 'DBLSTRING' || b[0] === 'STRING' || b[0] === 'BOOLEAN') {\n      let attrAlias = formatAttrAlias(b[1]);\n      values[`:${attrAlias}`] = formatType(b[0], b[1]);\n      a += ` :${attrAlias}`;\n    } else a += ` ${b[1]}`;\n\n    return a;\n  }, '');\n\n  let returnObj = {\n    FilterExpression: query.trim(),\n    ExpressionAttributeNames: attributes,\n    ExpressionAttributeValues: values\n  };\n  if (useKeyCondition) returnObj.KeyConditionExpression = KeyConditionExpression;\n  return returnObj;\n}\n","import { noop, fixCallback } from './utils';\nimport { get as getDB } from './db';\nimport parseQuery from './parser';\n\nexport default function wrapper(table, hash, range) {\n  return {\n    scan: scann(table),\n    query: query(table, hash, range),\n    get: get(table, hash, range),\n    put: put(table, hash, range),\n    update: update(table, hash, range),\n    del: del(table, hash, range)\n  };\n}\n\nexport function scan(table) {\n  return (query, callback = noop) => {\n    db.scan(Object.assign(obj, parseQuery(query)), callback);\n  };\n}\n\nexport function query(table, hash, range) {\n  return (query, callback = noop) => {\n    db.query(Object.assign({ TableName: table }, parseQuery(query, hash, range, true)), callback);\n  };\n}\n\nexport function get(table, hash, range) {\n  return (hashValue, rangeValue) => {\n    let Key = {};\n    Key[hash] = hashValue;\n    if (range && rangeValue !== undefined) Key[range] = rangeValue;\n    getDB().get({\n      TableName: table,\n      Key: Key\n    }, fixCallback(arguments[arguments.length-1]));\n  };\n}\n\nexport function put(table) {\n  return (item, callback = noop) => {\n    db.put({\n      TableName: table,\n      Item: item\n    }, callback);\n  };\n}\n\nexport function update(table, hash, range) {\n  return (query, hashValue, rangeValue, callback) => {\n    callback = typeof rangeValue === 'function' ? rangeValue : callback;\n    let Key = {};\n    Key[hash] = hashValue;\n    if (range && rangeValue !== undefined) Key[range] = rangeValue;\n    let data = {\n      FilterExpression: UpdateExpression,\n      ExpressionAttributeNames,\n      ExpressionAttributeValues\n    } = parseQuery(query);\n    db.update(Object.assign({ TableName: table, Key: Key }, data), fixCallback(callback));\n  };\n}\n\nexport function del(table, hash, range) {\n  return (item, hashValue, rangeValue) => {\n    let Key = {};\n    Key[hash] = hashValue;\n    if (range && rangeValue !== undefined) Key[range] = rangeValue;\n    db.delete({\n      TableName: table,\n      Key: Key\n    }, fixCallback(arguments[arguments.length-1]));\n  };\n}\n","const Lexer = (function() {\n  var BOOLEAN, DBLSTRING, LITERAL, MATH, MATH_MULTI, NUMBER, PARAMETER, SEPARATOR, SQL_CONDITIONALS, SQL_FUNCTIONS, SQL_OPERATORS, SQL_SORT_ORDERS, STAR, STRING, SUB_SELECT_OP, SUB_SELECT_UNARY_OP, WHITESPACE;\n\n  function Lexer(sql, opts) {\n    var bytesConsumed, i;\n    if (opts == null) {\n      opts = {};\n    }\n    this.sql = sql;\n    this.preserveWhitespace = opts.preserveWhitespace || false;\n    this.tokens = [];\n    this.currentLine = 1;\n    i = 0;\n    while (this.chunk = sql.slice(i)) {\n      bytesConsumed = this.keywordToken() || this.starToken() || this.booleanToken() || this.functionToken() || this.windowExtension() || this.sortOrderToken() || this.seperatorToken() || this.operatorToken() || this.mathToken() || this.dotToken() || this.conditionalToken() || this.subSelectOpToken() || this.subSelectUnaryOpToken() || this.numberToken() || this.stringToken() || this.parameterToken() || this.parensToken() || this.whitespaceToken() || this.literalToken();\n      if (bytesConsumed < 1) {\n        throw new Error(\"NOTHING CONSUMED: Stopped at - '\" + (this.chunk.slice(0, 30)) + \"'\");\n      }\n      i += bytesConsumed;\n    }\n    this.token('EOF', '');\n    this.postProcess();\n  }\n\n  Lexer.prototype.postProcess = function() {\n    var i, next_token, token, _i, _len, _ref, _results;\n    _ref = this.tokens;\n    _results = [];\n    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n      token = _ref[i];\n      if (token[0] === 'STAR') {\n        next_token = this.tokens[i + 1];\n        if (!(next_token[0] === 'SEPARATOR' || next_token[0] === 'FROM')) {\n          _results.push(token[0] = 'MATH_MULTI');\n        } else {\n          _results.push(void 0);\n        }\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Lexer.prototype.token = function(name, value) {\n    return this.tokens.push([name, value, this.currentLine]);\n  };\n\n  Lexer.prototype.tokenizeFromRegex = function(name, regex, part, lengthPart, output) {\n    var match, partMatch;\n    if (part == null) {\n      part = 0;\n    }\n    if (lengthPart == null) {\n      lengthPart = part;\n    }\n    if (output == null) {\n      output = true;\n    }\n    if (!(match = regex.exec(this.chunk))) {\n      return 0;\n    }\n    partMatch = match[part];\n    if (output) {\n      this.token(name, partMatch);\n    }\n    return match[lengthPart].length;\n  };\n\n  Lexer.prototype.tokenizeFromWord = function(name, word) {\n    var match, matcher;\n    if (word == null) {\n      word = name;\n    }\n    word = this.regexEscape(word);\n    matcher = /^\\w+$/.test(word) ? new RegExp(\"^(\" + word + \")\\\\b\", 'ig') : new RegExp(\"^(\" + word + \")\", 'ig');\n    match = matcher.exec(this.chunk);\n    if (!match) {\n      return 0;\n    }\n    this.token(name, match[1]);\n    return match[1].length;\n  };\n\n  Lexer.prototype.tokenizeFromList = function(name, list) {\n    var entry, ret, _i, _len;\n    ret = 0;\n    for (_i = 0, _len = list.length; _i < _len; _i++) {\n      entry = list[_i];\n      ret = this.tokenizeFromWord(name, entry);\n      if (ret > 0) {\n        break;\n      }\n    }\n    return ret;\n  };\n\n  Lexer.prototype.keywordToken = function() {\n    return this.tokenizeFromWord('SELECT') || this.tokenizeFromWord('DISTINCT') || this.tokenizeFromWord('FROM') || this.tokenizeFromWord('WHERE') || this.tokenizeFromWord('GROUP') || this.tokenizeFromWord('ORDER') || this.tokenizeFromWord('BY') || this.tokenizeFromWord('HAVING') || this.tokenizeFromWord('LIMIT') || this.tokenizeFromWord('JOIN') || this.tokenizeFromWord('LEFT') || this.tokenizeFromWord('RIGHT') || this.tokenizeFromWord('INNER') || this.tokenizeFromWord('OUTER') || this.tokenizeFromWord('ON') || this.tokenizeFromWord('AS') || this.tokenizeFromWord('UNION') || this.tokenizeFromWord('ALL') || this.tokenizeFromWord('LIMIT') || this.tokenizeFromWord('OFFSET') || this.tokenizeFromWord('FETCH') || this.tokenizeFromWord('ROW') || this.tokenizeFromWord('ROWS') || this.tokenizeFromWord('ONLY') || this.tokenizeFromWord('NEXT') || this.tokenizeFromWord('FIRST');\n  };\n\n  Lexer.prototype.dotToken = function() {\n    return this.tokenizeFromWord('DOT', '.');\n  };\n\n  Lexer.prototype.operatorToken = function() {\n    return this.tokenizeFromList('OPERATOR', SQL_OPERATORS);\n  };\n\n  Lexer.prototype.mathToken = function() {\n    return this.tokenizeFromList('MATH', MATH) || this.tokenizeFromList('MATH_MULTI', MATH_MULTI);\n  };\n\n  Lexer.prototype.conditionalToken = function() {\n    return this.tokenizeFromList('CONDITIONAL', SQL_CONDITIONALS);\n  };\n\n  Lexer.prototype.subSelectOpToken = function() {\n    return this.tokenizeFromList('SUB_SELECT_OP', SUB_SELECT_OP);\n  };\n\n  Lexer.prototype.subSelectUnaryOpToken = function() {\n    return this.tokenizeFromList('SUB_SELECT_UNARY_OP', SUB_SELECT_UNARY_OP);\n  };\n\n  Lexer.prototype.functionToken = function() {\n    return this.tokenizeFromList('FUNCTION', SQL_FUNCTIONS);\n  };\n\n  Lexer.prototype.sortOrderToken = function() {\n    return this.tokenizeFromList('DIRECTION', SQL_SORT_ORDERS);\n  };\n\n  Lexer.prototype.booleanToken = function() {\n    return this.tokenizeFromList('BOOLEAN', BOOLEAN);\n  };\n\n  Lexer.prototype.starToken = function() {\n    return this.tokenizeFromRegex('STAR', STAR);\n  };\n\n  Lexer.prototype.seperatorToken = function() {\n    return this.tokenizeFromRegex('SEPARATOR', SEPARATOR);\n  };\n\n  Lexer.prototype.literalToken = function() {\n    return this.tokenizeFromRegex('LITERAL', LITERAL, 1, 0);\n  };\n\n  Lexer.prototype.numberToken = function() {\n    return this.tokenizeFromRegex('NUMBER', NUMBER);\n  };\n\n  Lexer.prototype.parameterToken = function() {\n    return this.tokenizeFromRegex('PARAMETER', PARAMETER);\n  };\n\n  Lexer.prototype.stringToken = function() {\n    return this.tokenizeFromRegex('STRING', STRING, 1, 0) || this.tokenizeFromRegex('DBLSTRING', DBLSTRING, 1, 0);\n  };\n\n  Lexer.prototype.parensToken = function() {\n    return this.tokenizeFromRegex('LEFT_PAREN', /^\\(/) || this.tokenizeFromRegex('RIGHT_PAREN', /^\\)/);\n  };\n\n  Lexer.prototype.windowExtension = function() {\n    var match;\n    match = /^\\.(win):(length|time)/i.exec(this.chunk);\n    if (!match) {\n      return 0;\n    }\n    this.token('WINDOW', match[1]);\n    this.token('WINDOW_FUNCTION', match[2]);\n    return match[0].length;\n  };\n\n  Lexer.prototype.whitespaceToken = function() {\n    var match, newlines, partMatch;\n    if (!(match = WHITESPACE.exec(this.chunk))) {\n      return 0;\n    }\n    partMatch = match[0];\n    newlines = partMatch.replace(/[^\\n]/, '').length;\n    this.currentLine += newlines;\n    if (this.preserveWhitespace) {\n      this.token(name, partMatch);\n    }\n    return partMatch.length;\n  };\n\n  Lexer.prototype.regexEscape = function(str) {\n    return str.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  };\n\n  SQL_FUNCTIONS = ['AVG', 'COUNT', 'MIN', 'MAX', 'SUM'];\n\n  SQL_SORT_ORDERS = ['ASC', 'DESC'];\n\n  SQL_OPERATORS = ['=', '!=', '>=', '>', '<=', '<>', '<', 'LIKE', 'IS NOT', 'IS'];\n\n  SUB_SELECT_OP = ['IN', 'NOT IN', 'ANY', 'ALL', 'SOME'];\n\n  SUB_SELECT_UNARY_OP = ['EXISTS'];\n\n  SQL_CONDITIONALS = ['AND', 'OR'];\n\n  BOOLEAN = ['TRUE', 'FALSE', 'NULL'];\n\n  MATH = ['+', '-'];\n\n  MATH_MULTI = ['/', '*'];\n\n  STAR = /^\\*/;\n\n  SEPARATOR = /^,/;\n\n  WHITESPACE = /^[ \\n\\r]+/;\n\n  LITERAL = /^`?([a-z_][a-z0-9_]{0,})`?/i;\n\n  PARAMETER = /^\\$[0-9]+/;\n\n  NUMBER = /^[0-9]+(\\.[0-9]+)?/;\n\n  STRING = /^'([^\\\\']*(?:\\\\.[^\\\\']*)*)'/;\n\n  DBLSTRING = /^\"([^\\\\\"]*(?:\\\\.[^\\\\\"]*)*)\"/;\n\n  return Lexer;\n\n})();\n\nexport default function (sql, opts) {\n  return (new Lexer(sql, opts)).tokens;\n}\n","import { setup as setupdb } from './db';\nimport * as dc from './documentClient';\n\n\nexport default function (config = {}) {\n  setupdb(\n    config.accessKey || 'cUniqueSessionID',\n    config.secret || 'SECRET',\n    config.region || 'us-west-2',\n    config.endpoint || 'http://localhost:8000'\n  );\n  return dc;\n}\n"],"names":["setup","accessKey","secret","region","endpoint","AWS","config","update","accessKeyId","secretAccessKey","db","DynamoDB","DocumentClient","get","formatType","type","value","parseFloat","formatAttrAlias","attr","replace","fixCallback","callback","noop","parseQuery","query","hash","range","useKeyCondition","let","KeyConditionExpression","attributes","values","returnObj","FilterExpression","lexer","tokenize","reduce","a","b","reserved","includes","attrAlias","trim","ExpressionAttributeNames","ExpressionAttributeValues","table","Object","assign","TableName","hashValue","rangeValue","Key","undefined","getDB","arguments","length","put","item","Item","data","UpdateExpression","del","delete","const","require","Lexer","sql","opts","bytesConsumed","i","this","preserveWhitespace","tokens","currentLine","chunk","slice","keywordToken","starToken","booleanToken","functionToken","windowExtension","sortOrderToken","seperatorToken","operatorToken","mathToken","dotToken","conditionalToken","subSelectOpToken","subSelectUnaryOpToken","numberToken","stringToken","parameterToken","parensToken","whitespaceToken","literalToken","Error","token","postProcess","BOOLEAN","DBLSTRING","LITERAL","MATH","MATH_MULTI","NUMBER","PARAMETER","SEPARATOR","SQL_CONDITIONALS","SQL_FUNCTIONS","SQL_OPERATORS","SQL_SORT_ORDERS","STAR","STRING","SUB_SELECT_OP","SUB_SELECT_UNARY_OP","WHITESPACE","prototype","next_token","_i","_len","_ref","_results","push","name","tokenizeFromRegex","regex","part","lengthPart","output","match","partMatch","exec","tokenizeFromWord","word","matcher","regexEscape","test","RegExp","tokenizeFromList","list","entry","ret","newlines","str","scan","scann","obj","setupdb","dc"],"mappings":"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"}